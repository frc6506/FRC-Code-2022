// RobotBuilder Version: 4.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

// ROBOTBUILDER TYPE: Subsystem.

package frc.robot.subsystems;


import frc.robot.commands.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj2.command.SubsystemBase;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.motorcontrol.MotorController;
import edu.wpi.first.wpilibj.motorcontrol.MotorControllerGroup;
import edu.wpi.first.wpilibj.motorcontrol.PWMSparkMax;
import edu.wpi.first.wpilibj.motorcontrol.PWMVictorSPX;

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class Drivetrain extends SubsystemBase {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
private PWMSparkMax motorLeft_1;
private PWMSparkMax motorLeft_2;
private MotorControllerGroup leftMotors;
private PWMVictorSPX motorRight_1;
private PWMSparkMax motorRight_2;
private MotorControllerGroup rightMotors;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    
    /**
    *
    */
    public Drivetrain() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
motorLeft_1 = new PWMSparkMax(10);
 addChild("MotorLeft_1",motorLeft_1);
 motorLeft_1.setInverted(false);

motorLeft_2 = new PWMSparkMax(11);
 addChild("MotorLeft_2",motorLeft_2);
 motorLeft_2.setInverted(false);

leftMotors = new MotorControllerGroup(motorLeft_1, motorLeft_2  );
 addChild("LeftMotors",leftMotors);
 

motorRight_1 = new PWMVictorSPX(12);
 addChild("MotorRight_1",motorRight_1);
 motorRight_1.setInverted(false);

motorRight_2 = new PWMSparkMax(13);
 addChild("MotorRight_2",motorRight_2);
 motorRight_2.setInverted(false);

rightMotors = new MotorControllerGroup(motorRight_1, motorRight_2  );
 addChild("RightMotors",rightMotors);
 


        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }

    @Override
    public void periodic() {
        // This method will be called once per scheduler run

    }

    @Override
    public void simulationPeriodic() {
        // This method will be called once per scheduler run when in simulation

    }

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

}

